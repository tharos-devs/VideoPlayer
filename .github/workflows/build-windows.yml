name: Build Windows x64

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allows manual triggering

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install app dependencies
        run: npm install

      - name: Create required app icons
        run: |
          echo "Creating Windows app icons..."
          # Create ICO from PNG (fallback to copy if magick fails)
          if [ -f "src-tauri/icons/icon.png" ]; then
            if magick src-tauri/icons/icon.png -resize 256x256 src-tauri/icons/icon.ico 2>/dev/null; then
              echo "✅ Created icon.ico with ImageMagick"
            else
              echo "⚠️ ImageMagick failed, copying PNG as ICO"
              cp src-tauri/icons/icon.png src-tauri/icons/icon.ico
            fi
          else
            echo "❌ icon.png not found"
            ls -la src-tauri/icons/
          fi
          
          # Verify all required icons exist
          for icon in "32x32.png" "128x128.png" "128x128@2x.png" "icon.png"; do
            if [ -f "src-tauri/icons/$icon" ]; then
              echo "✅ Found $icon"
            else
              echo "❌ Missing $icon"
            fi
          done
        shell: bash

      - name: Create copy-assets script
        run: |
          echo '@echo off' > copy-assets.bat
          echo 'echo Copying assets...' >> copy-assets.bat
          echo 'rem Add your asset copying logic here' >> copy-assets.bat

      - name: Build Windows app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: windows-v__VERSION__
          releaseName: 'VideoPlayer Windows v__VERSION__'
          releaseBody: 'Windows x64 build of VideoPlayer'
          releaseDraft: true
          prerelease: false
          args: --target x86_64-pc-windows-msvc

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: videoplayer-windows-x64
          path: |
            src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi
            src-tauri/target/x86_64-pc-windows-msvc/release/bundle/exe/*.exe
          retention-days: 30