name: Build Windows x64

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allows manual triggering

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install app dependencies
        run: npm install

      - name: Create Windows ICO icon
        run: |
          # Install ImageMagick if needed (should be available on Windows runners)
          magick src-tauri/icons/icon.png -resize 256x256 src-tauri/icons/icon.ico
        shell: bash

      - name: Create copy-assets script
        run: |
          echo '@echo off' > copy-assets.bat
          echo 'echo Copying assets...' >> copy-assets.bat
          echo 'rem Add your asset copying logic here' >> copy-assets.bat

      - name: Build Windows app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: windows-v__VERSION__
          releaseName: 'VideoPlayer Windows v__VERSION__'
          releaseBody: 'Windows x64 build of VideoPlayer'
          releaseDraft: true
          prerelease: false
          args: --target x86_64-pc-windows-msvc

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: videoplayer-windows-x64
          path: |
            src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi
            src-tauri/target/x86_64-pc-windows-msvc/release/bundle/exe/*.exe
          retention-days: 30