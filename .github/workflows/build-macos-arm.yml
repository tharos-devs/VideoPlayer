name: Build macOS ARM64

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: write
  packages: write

jobs:
  build-macos-arm:
    runs-on: macos-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install app dependencies
        run: npm install

      - name: Create required app icons
        run: |
          echo "Creating macOS app icons..."
          
          # Ensure icons directory exists
          mkdir -p src-tauri/icons
          
          # Verify icons exist (they should be committed now)
          if [ ! -f "src-tauri/icons/icon.png" ]; then
            echo "❌ icon.png missing from repository!"
            echo "Available files:"
            ls -la src-tauri/icons/ 2>/dev/null || echo "Icons directory missing"
            exit 1
          else
            echo "✅ Found icon.png"
          fi
          
          # Create ICNS from PNG (fallback to copy if sips fails)
          if [ -f "src-tauri/icons/icon.png" ]; then
            if sips -s format icns src-tauri/icons/icon.png --out src-tauri/icons/icon.icns 2>/dev/null; then
              echo "✅ Created icon.icns with sips"
            else
              echo "⚠️ sips failed, copying PNG as ICNS"
              cp src-tauri/icons/icon.png src-tauri/icons/icon.icns
            fi
            
            # Create smaller PNG variants if missing
            for size in "32x32" "128x128" "128x128@2x"; do
              if [ ! -f "src-tauri/icons/${size}.png" ]; then
                echo "Creating ${size}.png from icon.png"
                sips -z ${size%@*} ${size%@*} src-tauri/icons/icon.png --out src-tauri/icons/${size}.png 2>/dev/null || cp src-tauri/icons/icon.png src-tauri/icons/${size}.png
              fi
            done
          else
            echo "❌ Still no icon.png found after fallback"
            ls -la src-tauri/ || echo "src-tauri directory missing"
          fi
          
          # Final verification
          echo "📋 Icon inventory:"
          ls -la src-tauri/icons/ 2>/dev/null || echo "Icons directory missing"

      - name: Create copy-assets script
        run: |
          echo '#!/bin/bash' > copy-assets.sh
          echo 'echo "Assets copying completed"' >> copy-assets.sh
          echo 'exit 0' >> copy-assets.sh
          chmod +x copy-assets.sh

      - name: Build macOS ARM app
        run: npm run tauri:build -- --target aarch64-apple-darwin

      - name: Upload macOS ARM artifacts
        uses: actions/upload-artifact@v4
        with:
          name: videoplayer-macos-arm64
          path: |
            src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg
            src-tauri/target/aarch64-apple-darwin/release/bundle/macos/*.app
          retention-days: 30