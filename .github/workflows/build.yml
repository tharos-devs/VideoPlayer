name: Build VideoPlayer

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
          
      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
          
      - name: Install app dependencies
        run: npm install

      - name: Create platform-specific icons
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            magick src-tauri/icons/icon.png -resize 256x256 src-tauri/icons/icon.ico
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            sips -s format icns src-tauri/icons/icon.png --out src-tauri/icons/icon.icns
          fi
        shell: bash

      - name: Create copy-assets script
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            echo '@echo off' > copy-assets.bat
            echo 'echo Copying assets...' >> copy-assets.bat
          else
            echo '#!/bin/bash' > copy-assets.sh
            echo 'echo "Copying assets..."' >> copy-assets.sh
            chmod +x copy-assets.sh
          fi
        shell: bash
          
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces __VERSION__ with the app version
          releaseName: 'VideoPlayer v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false